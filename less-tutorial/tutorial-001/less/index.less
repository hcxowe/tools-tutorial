// out: ../css/index.css, compress: false, sourceMap: true

// 变量
@color1: #553833;
@color2: @color1 + #111111;
@baseHeight: 100px;
@imgPath: '../images';

body {
    background-color: @color2;
    background-image: url("@{imgPath}/xxx.png");
}

// 混合
.bordered {
    border: 1px solid #ccc;
    border-radius: 5px;
}

#header {
    .bordered;
    background-color: greenyellow;
}

.borderfoo(@width: 1px; @color: red; @style: solid) {
    border: @width @style @color;
}

div {
    .borderfoo(3px; blue; dotted);
}

.mixin() {
    @width:  100%;
    @height: 200px;
    display: none;
}

.caller {
    .mixin();
    width:  @width;
    height: @height;
}

.mixinx (@a) when (lightness(@a) >= 50%) {
  background-color: black;
}
.mixinx (@a) when (lightness(@a) < 50%) {
  background-color: white;
}
.mixinx (@a) {
  color: @a;
}

.class1 {
    .mixinx(#ddd);
}
.class2 {
    .mixinx(#444);
}

// 嵌套
#header {
    .wrap {
        width: 100%;
        min-height: 500px;

        .content {
            border: 2px dotted red;
            box-shadow: 0 0 5px 0 red;
        }

        input {
            &:focus {
                border: 1px solid blue;
            }
        }
    }
}

// 运算
input {
    width: @baseHeight + 100px;
}

// Extend
ul li {
    &:extend(.inline);
    float: left; 
}

.inline {
    color: white;
}

// 循环
.loop(@counter) when (@counter > 0) {
  .loop((@counter - 1));    // next iteration
  width: (10px * @counter); // code for each iteration
}

div {
  .loop(5); // launch the loop
}

.generate-columns(4);

.generate-columns(@n, @i: 1) when (@i =< @n) {
  .column-@{i} {
    width: (@i * 100% / @n);
  }
  .generate-columns(@n, (@i + 1));
}

// 合并
.mixin2() {
  box-shadow+: inset 0 0 10px #555;
}
.myclass {
  .mixin2();
  box-shadow+: 0 0 20px black;
}

// 父选择符
.button {
  &-ok {
    background-image: url("ok.png");
  }
  &-cancel {
    background-image: url("cancel.png");
  }

  &-custom {
    background-image: url("custom.png");
  }
}

.link {
  & + & {
    color: red;
  }

  & & {
    color: green;
  }

  && {
    color: blue;
  }

  &, &ish {
    color: cyan;
  }
}

.grand {
  .parent {
    & > & {
      color: red;
    }

    & & {
      color: green;
    }

    && {
      color: blue;
    }

    &, &ish {
      color: cyan;
    }
  }
}

.header {
  .menu {
    border-radius: 5px;
    .no-borderradius & {
      background-image: url('images/button-background.png');
    }
  }
}

p, a, ul, li {
border-top: 2px dotted #366;
  & + & {
      border-top: 0;
  }
}